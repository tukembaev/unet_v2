import React from "react";
import { zodResolver } from "@hookform/resolvers/zod";
import { useForm } from "react-hook-form";
import { loginSchema, LoginFormValues } from "../model/schema";
import {
  Button,
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "shared/ui";
import { FormField } from "shared/lib";
import { useLogin } from "../model/queries";


export const LoginForm: React.FC = () => {
  const form = useForm<LoginFormValues>({
    resolver: zodResolver(loginSchema),
    defaultValues: {
      username: "",
      password: "",
    },
  });

  const { mutateAsync: login, isPending } = useLogin();

  return (
    <Card>
      <CardHeader>
        <CardTitle>–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É</CardTitle>
        <CardDescription>–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏</CardDescription>
      </CardHeader>

      <CardContent>
        <form
          onSubmit={form.handleSubmit((values) => login(values))} // üî• –∏—Å–ø–æ–ª—å–∑—É–µ–º login –Ω–∞–ø—Ä—è–º—É—é
          className="space-y-4"
        >
          <FormField
            form={form}
            name="username"
            label="–ò–ù–ù"
            placeholder="–í–≤–µ–¥–∏—Ç–µ –ò–ù–ù"
            required
          />
          <FormField
            form={form}
            name="password"
            type="password"
            label="–ü–∞—Ä–æ–ª—å"
            placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
            required
          />

          <Button type="submit" disabled={isPending || form.formState.isSubmitting}>
            {isPending || form.formState.isSubmitting ? "–ó–∞–≥—Ä—É–∑–∫–∞..." : "–í–æ–π—Ç–∏"}
          </Button>
        </form>
      </CardContent>
    </Card>
  );
};
