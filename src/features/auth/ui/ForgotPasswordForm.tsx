import React, { useState } from "react";
import { ArrowLeft } from "lucide-react";
import { z } from "zod";
import { zodResolver } from "@hookform/resolvers/zod";
import { useForm } from "react-hook-form";
import { FormField } from "shared/lib/form";
import { Button } from "shared/ui/button";
import { Card, CardContent } from "shared/ui/card";

interface ForgotPasswordFormProps {
  setForgotPassword: (value: boolean) => void;
}

// ‚úÖ —Å—Ö–µ–º–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
const formSchema = z.object({
  inn: z
    .string()
    .min(8, { message: "–ò–ù–ù –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 8 —Å–∏–º–≤–æ–ª–æ–≤" })
    .regex(/^\d+$/, { message: "–ò–ù–ù –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã" }),
});

export const ForgotPasswordForm: React.FC<ForgotPasswordFormProps> = ({
  setForgotPassword,
}) => {
  const [isLoading, setIsLoading] = useState(false);

  const form = useForm<z.infer<typeof formSchema>>({
    resolver: zodResolver(formSchema),
    defaultValues: {
      inn: "",
    },
  });

  const handleSubmit = async (values: z.infer<typeof formSchema>) => {
    setIsLoading(true);
    try {
      console.log("–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –¥–ª—è –ò–ù–ù:", values.inn);
      // üîπ –ó–¥–µ—Å—å –¥–æ–±–∞–≤—å —Å–≤–æ–π API-–∑–∞–ø—Ä–æ—Å
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–∞—Ä–æ–ª—è:", error);
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <Card className="w-full max-w-md border border-border">
      <CardContent className="p-6">
        <form onSubmit={form.handleSubmit(handleSubmit)} className="space-y-5">
          {/* –ü–æ–ª–µ –ò–ù–ù */}
          <div>
            <label className="block text-sm font-medium text-gray-500 mb-1">
              –ò–ù–ù
            </label>
            <FormField
              form={form}
              name="inn"
              placeholder="–í–≤–µ–¥–∏—Ç–µ –ò–ù–ù"

            />
          </div>

          {/* –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ */}
          <Button type="submit" className="w-full bg-[#4b84f4]" disabled={isLoading}>
            {isLoading ? "–û—Ç–ø—Ä–∞–≤–∫–∞..." : "–û—Ç–ø—Ä–∞–≤–∏—Ç—å"}
          </Button>

          {/* –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ */}
          <Button
            type="button"
            variant="outline"
            onClick={() => setForgotPassword(false)}
            className="w-full flex items-center justify-center gap-2"
          >
            <ArrowLeft size={18} />
            –ù–∞–∑–∞–¥
          </Button>
        </form>
      </CardContent>
    </Card>
  );
};
